{
    "openapi": "3.0.0",
    "info": {
        "title": "My Modular API",
        "description": "API documentation for modular app",
        "version": "1.0.0"
    },
    "paths": {
        "/api/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get a paginated list of users with filter on name or email",
                "operationId": "c023197cbd3afbb49a16608b32149155",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Filter users by name",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "John"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Filter users by email",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "email",
                            "example": "john@example.com"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15,
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated list of users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenericPaginatedResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/{user}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get a single user with their posts",
                "operationId": "77d94c35ec7f7461607fa9e6f2455a9c",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "The ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 7
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful user fetch",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserWithPosts"
                                        },
                                        "meta": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "links": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "GenericPaginatedResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "message": {
                        "type": "string",
                        "example": "Data fetched successfully"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/User"
                                },
                                {
                                    "$ref": "#/components/schemas/Post"
                                },
                                {
                                    "$ref": "#/components/schemas/Notification"
                                }
                            ]
                        }
                    },
                    "meta": {
                        "properties": {
                            "current_page": {
                                "type": "integer",
                                "example": 1
                            },
                            "total": {
                                "type": "integer",
                                "example": 100
                            }
                        },
                        "type": "object"
                    },
                    "links": {
                        "properties": {
                            "first": {
                                "type": "string",
                                "example": "http://localhost/api/items?page=1"
                            },
                            "last": {
                                "type": "string",
                                "example": "http://localhost/api/items?page=10"
                            },
                            "prev": {
                                "type": "string",
                                "example": null,
                                "nullable": true
                            },
                            "next": {
                                "type": "string",
                                "example": null,
                                "nullable": true
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Notification": {
                "required": [
                    "id",
                    "title",
                    "message",
                    "created_at"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1001
                    },
                    "title": {
                        "type": "string",
                        "example": "New message received"
                    },
                    "message": {
                        "type": "string",
                        "example": "You have a new message from Alice."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-07-11T12:34:56Z"
                    }
                },
                "type": "object"
            },
            "Post": {
                "required": [
                    "id",
                    "title",
                    "description",
                    "user_id",
                    "created_at"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 101
                    },
                    "title": {
                        "type": "string",
                        "example": "My First Post"
                    },
                    "description": {
                        "type": "string",
                        "example": "This is the content of the post."
                    },
                    "user_id": {
                        "description": "ID of the post author",
                        "type": "integer",
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-07-11T09:00:00Z"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "required": [
                    "id",
                    "name",
                    "email"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    }
                },
                "type": "object"
            },
            "UserWithPosts": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/User"
                    },
                    {
                        "properties": {
                            "posts": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            }
        }
    },
    "tags": [
        {
            "name": "Users",
            "description": "Users"
        }
    ]
}